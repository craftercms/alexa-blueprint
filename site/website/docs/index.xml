<?xml version="1.0" encoding="UTF-8"?>
<page>
	<content-type>/page/generic</content-type>
	<display-template>/templates/web/page-generic.ftl</display-template>
	<no-template-required/>
	<merge-strategy>inherit-levels</merge-strategy>
	<placeInNav>false</placeInNav>
	<file-name>index.xml</file-name>
	<internal-name>Setup Documentation</internal-name>
	<orderDefault_f>-1</orderDefault_f>
	<objectGroupId>8d7f</objectGroupId>
	<objectId>8d7f21fa-5e09-00aa-8340-853b7db302da</objectId>
	<folder-name>docs</folder-name>
	<createdDate>2017-1-31T16:18:14.000Z</createdDate>
	<createdDate_dt>2017-1-31T16:18:14.000Z</createdDate_dt>
	<lastModifiedDate>2021-08-11T19:21:38.606Z</lastModifiedDate>
	<lastModifiedDate_dt>2021-08-11T19:21:38.606Z</lastModifiedDate_dt>
	<navLabel>Setup Documentation</navLabel>
	<content_html>&lt;p&gt;&lt;strong&gt;Alexa Blueprint POC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;This blueprint is intended to show a use case of Crafter CMS with Alexa. This section assumes you have successfully followed the steps in the quick start guide to get the Crafter CMS and login.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li style="font-weight: 400;" aria-level="1"&gt;&lt;span style="font-weight: 400;"&gt;Must set up company account on Alexa Developer Console&lt;/span&gt;&lt;/li&gt;
&lt;li style="font-weight: 400;" aria-level="1"&gt;&lt;span style="font-weight: 400;"&gt;Must be able to post to an https address&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Set up:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Crafter Studio:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After you log in, start by creating a new site. Then, go to the public marketplace and select the Alexa Blueprint. After the site finishes building, you should be able to move on to the Alexa Developer Console to build the skill there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alexa Developer Console:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;In order to replicate this Blueprint, you can either copy the Json from below or manually create the skill from scratch yourself. The first [number of steps] steps will be the same for both methods.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;To learn more about skills refer to the Alexa Developer Console docs here:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.amazon.com/en-US/docs/alexa/ask-overviews/build-skills-with-the-alexa-skills-kit.html"&gt;&lt;span style="font-weight: 400;"&gt;https://developer.amazon.com/en-US/docs/alexa/ask-overviews/build-skills-with-the-alexa-skills-kit.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Replicate by copying Json:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.amazon.com/alexa/console/ask"&gt;&lt;span style="font-weight: 400;"&gt;https://developer.amazon.com/alexa/console/ask&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;In the Alexa Developer Console, you should log in with a corporate account. If you don&amp;rsquo;t have one, setting it up is simple. Just enter the information required on the sign up page.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After signing up, navigate to create a new skill. Enter a name for your skill and the Custom option should be selected. Scroll down to step 2 and select Provision your own for the backend resources. This makes it so that Alexa will be able to communicate with the blueprint site.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After creating the skill, select the Hello World template. This is a plain skill with a basic built-in intent.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Navigate to Custom &amp;gt; Interaction Model &amp;gt; JSON Editor and copy this code into the editor:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[INTERACTION_JSON]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;It should look like this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The next step is to set up your endpoint. Navigate to Custom &amp;gt; Interaction Model &amp;gt; Endpoint. Select the https option and enter your endpoint. It should look something like:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://website.com/api/alexa/fact.json?crafterSite=siteName"&gt;&lt;span style="font-weight: 400;"&gt;https://website.com/api/alexa/fact.json?crafterSite=siteName&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Save the model with the Save Model button and then build it with the build model.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;You should get a notification like this when finished.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Navigate to the Test option on the top banner and on the dropdown next to &amp;ldquo;Test is disabled for this skill&amp;rdquo;, select Development and you should be free to test your skill.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Replicate by manually making the skill:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.amazon.com/alexa/console/ask"&gt;&lt;span style="font-weight: 400;"&gt;https://developer.amazon.com/alexa/console/ask&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;In the Alexa Developer Console, you should log in with a corporate account. If you don&amp;rsquo;t have one, setting it up is simple. Just enter the information required on the sign up page.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After signing up, navigate to create a new skill. Enter a name for your skill and the Custom option should be selected. Scroll down to step 2 and select Provision your own for the backend resources. This makes it so that Alexa will be able to communicate with the blueprint site.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After creating the skill, select the Hello World template. This is a plain skill with a basic built-in intent.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After the initial build of your skill, navigate to Custom &amp;gt; Invocation. Choose a name for the invocation of your skill in dialogue.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 6:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Then navigate to Custom &amp;gt; Interaction Model &amp;gt; Intents. The built in Hello World intent will be in this drop down. Keeping it or deleting it will have no impact on the functionality of this blueprint. Select add intent and choose a name for the custom intent. You will be creating two custom intents in this and utilizing two built-in intents.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Then populate your intent with utterances that the user might use to invoke the intent. During this process, you will need to add Intent Slots. For the purposes of this Blueprint, you should create utterances and an intent slot that receives a Date. These utterances will suffice.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;For additional information on intents and slots, refer to the Alexa Developer Console docs here:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://developer.amazon.com/en-US/docs/alexa/custom-skills/create-intents-utterances-and-slots.html"&gt;&lt;span style="font-weight: 400;"&gt;https://developer.amazon.com/en-US/docs/alexa/custom-skills/create-intents-utterances-and-slots.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The slot type should be AMAZON.DATE.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The second custom intent should follow a very similar process to the first. However, we will be using an AMAZON.SearchQuery Slot Type for the second intent.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The two built-in intents will be AMAZON.YesIntent and AMAZON.NoIntent. They allow the dialogue of this Blueprint to flow. The navigation of Custom &amp;gt; Interaction Model &amp;gt; Intents &amp;gt; Add Intent still applies, however you should select Use an existing intent from Alexa&amp;rsquo;s built-in library. Look up &amp;ldquo;yes&amp;rdquo; to apply the AMAZON.YesIntent and &amp;ldquo;no&amp;rdquo; to apply the AMAZON.NoIntent.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After working with the intents, the next step is to set up the endpoint. To set up your endpoint, you should have a url that points to the REST Script that posts the request sent by Alexa. It should look something like:&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;https://website.com/api/alexa/fact.json?crafterSite=siteName&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Building Your Skill and Using the Alexa Fact Skill:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;After either editing your json data or building your skill from scratch, the final step is to build the model which should be as simple as navigating back to Custom and selecting number 3 in the list on the right side of the screen. It should take a few moments to complete the build.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Moving on the to Test selection on the upper banner, select Development in the only dropdown menu on the page. You should be able to begin a dialogue looking something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;To invoke your skill, your line of dialogue will look something like:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Alexa tell {invocation name} to {intent utterance}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;The invocation name in this Blueprint is &amp;ldquo;my crafter&amp;rdquo; and an example utterance would be &amp;ldquo;tell me what happened on {Date}&amp;rdquo;. Once a session, or conversation, is started, there is no need to re-invoke the skill. You can continue with only intent utterances until the dialogue is finished.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REST Script:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;In order to handle the request sent by Alexa, usage of a REST script is necessary. The request Alexa sends over is in JSON format, and the response should be in such format as well. To learn more about REST Scripts, refer here: &lt;/span&gt;&lt;a href="https://docs.craftercms.org/en/3.1/developers/projects/engine/api/groovy-api.html"&gt;&lt;span style="font-weight: 400;"&gt;https://docs.craftercms.org/en/3.1/developers/projects/engine/api/groovy-api.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Limitations and ability to expand in production:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Currently, this blueprint uses system memory to store temporary data from the request sent by Alexa. This inefficiency can lead to potential problems in a production setting as with a larger number of requests and sessions, Alexa could send a secondary request to a different server from the original request and session. A solution to this would be to utilize Redis. Redis is a fast key-value storage system that allows you to cache data and access it extremely quickly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-weight: 400;"&gt;Amazon&amp;rsquo;s Elasticache for Redis is a caching system that combines the speed of Redis with the availability and scalability of Amazon&amp;rsquo;s servers. You can read more about Elasticache and Redis here: &lt;/span&gt;&lt;a href="https://aws.amazon.com/elasticache/redis/?ch=ns&amp;amp;loc=1"&gt;&lt;span style="font-weight: 400;"&gt;https://aws.amazon.com/elasticache/redis/?ch=ns&amp;amp;loc=1&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content_html>
</page>